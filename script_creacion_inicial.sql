-- TP12C2023 K3521 DATABASERS 7

USE GD2C2023
GO

-- 1. INICIALIZACIÃ“N

-- ELIMINO ESQUEMA ANTERIOR (NO SE PUEDE CORRER ESTO SI HAY TABLAS CREADAS)
IF (SCHEMA_ID('DATABASERS') IS NOT NULL)
	DROP SCHEMA DATABASERS
GO

-- CREO ESQUEMA DATABASERS
CREATE SCHEMA DATABASERS AUTHORIZATION DBO
GO


-- ELIMINO TABLAS ANTERIORES
CREATE PROCEDURE ELIMINAR_TABLAS
AS
BEGIN
IF OBJECT_ID('DATABASERS.MONEDA', 'U') IS NOT NULL DROP TABLE DATABASERS.MONEDA
IF OBJECT_ID('DATABASERS.TIPO_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.TIPO_INMUEBLE	
IF OBJECT_ID('DATABASERS.ESTADO_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.ESTADO_INMUEBLE	
IF OBJECT_ID('DATABASERS.CANT_AMBIENTES_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.CANT_AMBIENTES_INMUEBLE	
IF OBJECT_ID('DATABASERS.DISPOSICION_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.DISPOSICION_INMUEBLE	
IF OBJECT_ID('DATABASERS.ORIENTACION_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.ORIENTACION_INMUEBLE	
IF OBJECT_ID('DATABASERS.CARACTERISTICA_INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.CARACTERISTICA_INMUEBLE	
IF OBJECT_ID('DATABASERS.INMUEBLE_X_CARACTERISTICA', 'U') IS NOT NULL DROP TABLE DATABASERS.INMUEBLE_X_CARACTERISTICA	
IF OBJECT_ID('DATABASERS.INMUEBLE', 'U') IS NOT NULL DROP TABLE DATABASERS.INMUEBLE
IF OBJECT_ID('DATABASERS.PROPIETARIO', 'U') IS NOT NULL DROP TABLE DATABASERS.PROPIETARIO	
IF OBJECT_ID('DATABASERS.ALQUILER','U') IS NOT NULL DROP TABLE DATABASERS.ALQUILER
IF OBJECT_ID('DATABASERS.ESTADO_ALQUILER','U') IS NOT NULL DROP TABLE DATABASERS.ESTADO_ALQUILER
IF OBJECT_ID('DATABASERS.DETALLE','U') IS NOT NULL DROP TABLE DATABASERS.DETALLE
IF OBJECT_ID('DATABASERS.PAGO_ALQUILER','U') IS NOT NULL DROP TABLE DATABASERS.PAGO_ALQUILER
IF OBJECT_ID('DATABASERS.INQUILINO','U') IS NOT NULL DROP TABLE DATABASERS.INQUILINO
IF OBJECT_ID('DATABASERS.BARRIO','U') IS NOT NULL DROP TABLE DATABASERS.BARRIO
IF OBJECT_ID('DATABASERS.LOCALIDAD','U') IS NOT NULL DROP TABLE DATABASERS.LOCALIDAD
IF OBJECT_ID('DATABASERS.PROVINCIA','U') IS NOT NULL DROP TABLE DATABASERS.PROVINCIA
IF OBJECT_ID('DATABASERS.ANUNCIO','U') IS NOT NULL DROP TABLE DATABASERS.ANUNCIO
IF OBJECT_ID('DATABASERS.ESTADO_ANUNCIO','U') IS NOT NULL DROP TABLE DATABASERS.ESTADO_ANUNCIO
IF OBJECT_ID('DATABASERS.TIPO_OPERACION','U') IS NOT NULL DROP TABLE DATABASERS.TIPO_OPERACION
IF OBJECT_ID('DATABASERS.AGENTE','U') IS NOT NULL DROP TABLE DATABASERS.AGENTE
IF OBJECT_ID('DATABASERS.SUCURSAL','U') IS NOT NULL DROP TABLE DATABASERS.SUCURSAL
IF OBJECT_ID('DATABASERS.TIPO_PERIODO','U') IS NOT NULL DROP TABLE DATABASERS.TIPO_PERIODO
IF OBJECT_ID('DATABASERS.PAGO_VENTA','U') IS NOT NULL DROP TABLE DATABASERS.PAGO_VENTA
IF OBJECT_ID('DATABASERS.VENTA','U') IS NOT NULL DROP TABLE DATABASERS.VENTA
IF OBJECT_ID('DATABASERS.COMPRADOR','U') IS NOT NULL DROP TABLE DATABASERS.COMPRADOR
IF OBJECT_ID('DATABASERS.PERSONA','U') IS NOT NULL DROP TABLE DATABASERS.PERSONA
IF OBJECT_ID('DATABASERS.MEDIO_PAGO','U') IS NOT NULL DROP TABLE DATABASERS.MEDIO_PAGO
END
GO

-- ELIMINO PROCEDIMIENTOS ANTERIORES
CREATE PROCEDURE ELIMINAR_PROCEDIMIENTOS
AS
BEGIN
IF OBJECT_ID('DATABASERS.MIGRAR_MONEDA', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_MONEDA
IF OBJECT_ID('DATABASERS.MIGRAR_TIPO_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_TIPO_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_ESTADO_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ESTADO_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_CANT_AMBIENTES_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_CANT_AMBIENTES_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_DISPOSICION_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_DISPOSICION_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_ORIENTACION_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ORIENTACION_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_CARACTERISTICA_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_CARACTERISTICA_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_INMUEBLE_X_CARACTERISTICA', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_INMUEBLE_X_CARACTERISTICA
IF OBJECT_ID('DATABASERS.MIGRAR_INMUEBLE', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_INMUEBLE
IF OBJECT_ID('DATABASERS.MIGRAR_PROPIETARIO', 'P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_PROPIETARIO	
IF OBJECT_ID('DATABASERS.MIGRAR_ALQUILER','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ALQUILER
IF OBJECT_ID('DATABASERS.MIGRAR_ESTADO_ALQUILER','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ESTADO_ALQUILER
IF OBJECT_ID('DATABASERS.MIGRAR_DETALLE','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_DETALLE
IF OBJECT_ID('DATABASERS.MIGRAR_PAGO_ALQUILER','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_PAGO_ALQUILER 
IF OBJECT_ID('DATABASERS.MIGRAR_INQUILINO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_INQUILINO
IF OBJECT_ID('DATABASERS.MIGRAR_BARRIO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_BARRIO
IF OBJECT_ID('DATABASERS.MIGRAR_LOCALIDAD','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_LOCALIDAD 
IF OBJECT_ID('DATABASERS.MIGRAR_PROVINCIA','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_PROVINCIA
IF OBJECT_ID('DATABASERS.MIGRAR_ANUNCIO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ANUNCIO
IF OBJECT_ID('DATABASERS.MIGRAR_ESTADO_ANUNCIO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_ESTADO_ANUNCIO
IF OBJECT_ID('DATABASERS.MIGRAR_TIPO_OPERACION','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_TIPO_OPERACION
IF OBJECT_ID('DATABASERS.MIGRAR_AGENTE','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_AGENTE
IF OBJECT_ID('DATABASERS.MIGRAR_SUCURSAL','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_SUCURSAL
IF OBJECT_ID('DATABASERS.MIGRAR_TIPO_PERIODO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_TIPO_PERIODO
IF OBJECT_ID('DATABASERS.MIGRAR_PAGO_VENTA','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_PAGO_VENTA
IF OBJECT_ID('DATABASERS.MIGRAR_VENTA','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_VENTA
IF OBJECT_ID('DATABASERS.MIGRAR_COMPRADOR','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_COMPRADOR
IF OBJECT_ID('DATABASERS.MIGRAR_PERSONA','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_PERSONA
IF OBJECT_ID('DATABASERS.MIGRAR_MEDIO_PAGO','P') IS NOT NULL DROP PROCEDURE DATABASERS.MIGRAR_MEDIO_PAGO
END
GO

-- 2. CREACION DE TABLAS

-- CREO TABLAS
CREATE PROCEDURE CREAR_TABLAS
AS
BEGIN
CREATE TABLE DATABASERS.MONEDA
(
	MONEDA_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	MONEDA_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.TIPO_INMUEBLE
(
	TIPO_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	TIPO_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.ESTADO_INMUEBLE
(
	ESTADO_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	ESTADO_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.CANT_AMBIENTES_INMUEBLE
(
	CANT_AMBIENTES_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	CANT_AMBIENTES_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.DISPOSICION_INMUEBLE
(
	DISPOSICION_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	DISPOSICION_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.ORIENTACION_INMUEBLE
(
	ORIENTACION_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	ORIENTACION_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.CARACTERISTICA_INMUEBLE
(
	CARACTERISTICA_INMUEBLE_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	CARACTERISTICA_INMUEBLE_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.INMUEBLE_X_CARACTERISTICA (
   IXC_INMUEBLE_CODIGO NUMERIC(18,0) NOT NULL,
   IXC_CARACTERISTICA_CODIGO NUMERIC(3,0) NOT NULL,
   PRIMARY KEY (IXC_INMUEBLE_CODIGO, IXC_CARACTERISTICA_CODIGO)
)

CREATE TABLE DATABASERS.INMUEBLE (
	INMUEBLE_CODIGO NUMERIC(18,0) IDENTITY PRIMARY KEY NOT NULL,
	INMUEBLE_NOMBRE NVARCHAR(100) NULL,
	INMUEBLE_ANTIGUEDAD NUMERIC(18,0) NULL,
	INMUEBLE_EXPENSAS NUMERIC(18,2) NULL,
	INMUEBLE_CANT_AMBIENTES NUMERIC(3,0) NULL, --FK
	INMUEBLE_ORIENTACION NUMERIC(3,0) NULL, --FK
	INMUEBLE_DISPOSICION NUMERIC(3,0) NULL, --FK
	INMUEBLE_DESCRIPCION NVARCHAR(100) NULL,
	INMUEBLE_SUPERFICIETOTAL NUMERIC(18,2) NULL,
	INMUEBLE_TIPO_INMUEBLE NUMERIC(3,0) NULL, --FK
	INMUEBLE_BARRIO NUMERIC(3,0) NULL, --FK
	INMUEBLE_DIRECCION NVARCHAR(100) NULL,
	INMUEBLE_ESTADO NUMERIC(3,0) NULL --FK
)

CREATE TABLE DATABASERS.PROPIETARIO(
	PROPIETARIO_INMUEBLE NUMERIC(18,0) NOT NULL,
	PROPIETARIO_PERSONA NUMERIC(20,0) NOT NULL,
	PRIMARY KEY (PROPIETARIO_INMUEBLE, PROPIETARIO_PERSONA)
)

CREATE TABLE DATABASERS.ALQUILER(
	ALQUILER_CODIGO NUMERIC(18,0) NOT NULL,
	ALQUILER_ANUNCIO NUMERIC(19,0) NULL,
	ALQUILER_INQUILINO NUMERIC (20,0) NULL,
	ALQUILER_ESTADO NUMERIC (2,0) NULL,
	ALQUILER_FECHA_INICIO DATETIME NULL,
	ALQUILER_FECHA_FIN DATETIME NULL,
	ALQUILER_CANT_PERIODOS NUMERIC (18,0) NULL,
	ALQUILER_DEPOSITO NUMERIC (18,2) NULL,
	ALQUILER_COMISION NUMERIC (18,2) NULL,
	ALQUILER_GASTOS_AVERIGUA NUMERIC (18,2) NULL,
	PRIMARY KEY(ALQUILER_CODIGO)
)

CREATE TABLE DATABASERS.DETALLE(
	DETALLE_CODIGO NUMERIC(18,0) NOT NULL,
	DETALLE_ALQUILER NUMERIC(18,0) NULL,
	DETALLE_ALQ_NRO_PERIODO_INI NUMERIC(18,0) NULL,
	DETALLE_ALQ_NRO_PERIODO_FIN NUMERIC(18,0) NULL,
	DETALLE_ALQ_PRECIO NUMERIC(18,2) NULL,
	PRIMARY KEY(DETALLE_CODIGO)
)

CREATE TABLE DATABASERS.ESTADO_ALQUILER(
	ESTADO_ALQUILER_CODIGO NUMERIC(2,0) NOT NULL,
	ESTADO_ALQUILER_NOMBRE NVARCHAR(100) NULL,
	PRIMARY KEY (ESTADO_ALQUILER_CODIGO)
)

CREATE TABLE DATABASERS.INQUILINO(
	INQUILINO_ALQUILER NUMERIC(18,0) NOT NULL,
	INQUILINO_PERSONA NUMERIC(20,0) NOT NULL,
	PRIMARY KEY(INQUILINO_ALQUILER,INQUILINO_PERSONA)
)

CREATE TABLE DATABASERS.BARRIO(
	BARRIO_CODIGO NUMERIC(3,0) NOT NULL,
	BARRIO_DETALLE NVARCHAR(100) NULL,
	BARRIO_LOCALIDAD NUMERIC(3,0) NULL,
	PRIMARY KEY(BARRIO_CODIGO)
)

CREATE TABLE DATABASERS.LOCALIDAD(
	LOCALIDAD_CODIGO NUMERIC(3,0) NOT NULL,
	LOCALIDAD_DETALLE NVARCHAR(100) NULL,
	LOCALIDAD_PROVINCIA NUMERIC (3,0) NULL,
	PRIMARY KEY(LOCALIDAD_CODIGO)
)

CREATE TABLE DATABASERS.PROVINCIA(
	PROVINCIA_CODIGO NUMERIC(3,0) NOT NULL,
	PROVINCIA_DETALLE NVARCHAR(100) NULL,
	PRIMARY KEY(PROVINCIA_CODIGO)

)

CREATE TABLE DATABASERS.PAGO_ALQUILER(
	PAGO_ALQUILER_CODIGO NUMERIC(18,0) NOT NULL,
	PAGO_ALQUILER_ALQUILER NUMERIC(18,2) NOT NULL,
	PAGO_ALQUILER_MEDIO_PAGO NVARCHAR(100) NULL,
	PAGO_ALQUILER_NRO_PERIODO NUMERIC(18,0) NULL,
	PAGO_ALQUILER_FECHA DATETIME NULL,
	PAGO_ALQUILER_IMPORTE NUMERIC(18,2) NULL,
	PAGO_ALQUILER_FECHA_VENCIMIENTO DATETIME NULL, 
	PAGO_ALQUILER_DESC  NVARCHAR(100) NULL,
	PAGO_ALQUILER_FEC_INI DATETIME NULL,
	PAGO_ALQUILER_FEC_FIN DATETIME NULL,
	PRIMARY KEY(PAGO_ALQUILER_CODIGO,PAGO_ALQUILER_ALQUILER)
)

CREATE TABLE DATABASERS.ANUNCIO(
	ANUNCIO_CODIGO NUMERIC(19,0) IDENTITY PRIMARY KEY NOT NULL,
	ANUNCIO_INMUEBLE NUMERIC(18,0) NULL,
	ANUNCIO_FECHA_PUBLICACION DATETIME NULL,
	ANUNCIO_PRECIO_PUBLICADO NUMERIC(18,2) NULL,
	ANUNCIO_COSTO_ANUNCIO NUMERIC(18,2) NULL,
	ANUNCIO_FECHA_FINALIZACION DATETIME NULL,
	ANUNCIO_TIPO_OPERACION NVARCHAR(100) NULL,
	ANUNCIO_MONEDA NUMERIC(3,0) NULL,
	ANUNCIO_ESTADO NUMERIC(2,0) NULL,
	ANUNCIO_TIPO_PERIODO NUMERIC(2,0) NULL,
	ANUNCIO_AGENTE NUMERIC(18,0) NULL
)

CREATE TABLE DATABASERS.ESTADO_ANUNCIO(
	ESTADO_ANUNCIO_CODIGO NUMERIC(2,0) IDENTITY PRIMARY KEY NOT NULL,
	ESTADO_ANUNCIO_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.TIPO_OPERACION(
	TIPO_OPERACION_CODIGO NUMERIC(3,0) IDENTITY PRIMARY KEY NOT NULL,
	TIPO_OPERACION_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.AGENTE(
	AGENTE_SUCURSAL NUMERIC(18,0) NOT NULL,
	AGENTE_PERSONA NUMERIC(20,0) NOT NULL,
	PRIMARY KEY (AGENTE_SUCURSAL, AGENTE_PERSONA)
)

CREATE TABLE DATABASERS.TIPO_PERIODO(
	TIPO_PERIODO_CODIGO NUMERIC(2,0) IDENTITY PRIMARY KEY NOT NULL,
	TIPO_PERIODO_DETALLE NVARCHAR(100) NULL
)

CREATE TABLE DATABASERS.SUCURSAL(
	SUCURSAL_CODIGO NUMERIC(18,0) IDENTITY PRIMARY KEY NOT NULL,
	SUCURSAL_NOMBRE NVARCHAR(100) NULL,
	SUCURSAL_DIRECCION NVARCHAR(100) NULL,
	SUCURSAL_BARRIO NUMERIC(3,0) NULL
)

CREATE TABLE DATABASERS.PAGO_VENTA (
    PAGO_VENTA_CODIGO NUMERIC(18,0) NOT NULL,
    PAGO_VENTA_VENTA NUMERIC(18,0) NOT NULL,
    PAGO_VENTA_IMPORTE NUMERIC(18,2) NULL,
    PAGO_VENTA_MONEDA NUMERIC(3,0) NULL,
    PAGO_VENTA_COTIZACION NUMERIC(18,2) NULL,
    PAGO_VENTA_MEDIO_PAGO NUMERIC(2,0) NULL,
    PRIMARY KEY (PAGO_VENTA_CODIGO, PAGO_VENTA_VENTA)
)

CREATE TABLE DATABASERS.VENTA (
	VENTA_CODIGO NUMERIC(18,0) IDENTITY PRIMARY KEY NOT NULL,
	VENTA_ANUNCIO NUMERIC(19,0) NULL,
	VENTA_COMPRADOR NUMERIC(20,0) NULL,
	VENTA_MONEDA NUMERIC(3,0) NULL,
	VENTA_FECHA DATETIME NULL,
	VENTA_PRECIO_VENTA NUMERIC(18,2) NULL,
	VENTA_COMISION NUMERIC(18,2) NULL
)

CREATE TABLE DATABASERS.COMPRADOR (
	COMPRADOR_VENTA NUMERIC(18,0) NOT NULL,
	COMPRADOR_PERSONA NUMERIC(20,0) NOT NULL,
	PRIMARY KEY (COMPRADOR_VENTA, COMPRADOR_PERSONA)
)

CREATE TABLE DATABASERS.PERSONA (
	PERSONA_CODIGO NUMERIC(20,0) IDENTITY PRIMARY KEY NOT NULL,
	PERSONA_NOMBRE NVARCHAR(100) NULL,
	PERSONA_APELLIDO NVARCHAR(100) NULL,
	PERSONA_DNI NUMERIC(18,0) NULL,
	PERSONA_FECHA_REGISTRO DATETIME NULL,
	PERSONA_TELEFONO NUMERIC(18,0) NULL,
	PERSONA_MAIL NVARCHAR(100) NULL,
	PERSONA_FECHA_NAC DATETIME NULL
)

CREATE TABLE DATABASERS.MEDIO_PAGO (
	MEDIO_PAGO_CODIGO NUMERIC(2,0) IDENTITY PRIMARY KEY NOT NULL,
	MEDIO_PAGO_NOMBRE NVARCHAR(100) NULL
)
END
GO

-- 3. ADICIÃ“N DE FK A LAS TABLAS

CREATE PROCEDURE AGREGAR_FK
AS
BEGIN
--FK ALQUILER 
ALTER TABLE DATABASERS.ALQUILER
ADD FOREIGN KEY (ALQUILER_ANUNCIO) REFERENCES DATABASERS.ANUNCIO(ANUNCIO_CODIGO);

ALTER TABLE DATABASERS.ALQUILER 
ADD FOREIGN KEY (ALQUILER_INQUILINO) REFERENCES DATABASERS.INQUILINO(INQUILINO_CODIGO);

ALTER TABLE DATABASERS.ALQUILER
ADD FOREIGN KEY (ALQUILER_ESTADO) REFERENCES DATABASERS.ESTADO_ALQUILER(ESTADO_ALQUILER_CODIGO);

-- FK INMUEBLE
ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_CANT_AMBIENTES) REFERENCES DATABASERS.CANT_AMBIENTES(CANT_AMBIENTES_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_ORIENTACION) REFERENCES DATABASERS.ORIENTACION(ORIENTACION_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_DISPOSICION) REFERENCES DATABASERS.DISPOSICION(DISPOSICION_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_TIPO_INMUEBLE) REFERENCES DATABASERS.TIPO_INMUEBLE(TIPO_INMUEBLE_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_BARRIO) REFERENCES DATABASERS.BARRIO(BARRIO_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE
ADD FOREIGN KEY (INMUEBLE_ESTADO) REFERENCES DATABASERS.ESTADO(ESTADO_CODIGO);

-- FK INMUEBLE X CARACTERISTICA
ALTER TABLE DATABASERS.INMUEBLE_X_CARACTERISTICA
ADD FOREIGN KEY (IXC_INMUEBLE_CODIGO) REFERENCES DATABASERS.INMUEBLE(INMUEBLE_CODIGO);

ALTER TABLE DATABASERS.INMUEBLE_X_CARACTERISTICA
ADD FOREIGN KEY (IXC_CARACTERISTICA_CODIGO) REFERENCES DATABASERS.CARACTERISTICA_INMUEBLE(CARACTERISTICA_INMUEBLE_CODIGO);

-- FK PROPIETARIO
ALTER TABLE DATABASERS.PROPIETARIO
ADD FOREIGN KEY (PROPIETARIO_INMUEBLE) REFERENCES DATABASERS.INMUEBLE(INMUEBLE_CODIGO);

ALTER TABLE DATABASERS.PROPIETARIO
ADD FOREIGN KEY (PROPIETARIO_PERSONA) REFERENCES DATABASERS.PERSONA(PERSONA_CODIGO);

--FK ANUNCIO
ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_INMUEBLE) REFERENCES DATABASERS.INMUEBLE(INMUEBLE_CODIGO);

ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_TIPO_OPERACION) REFERENCES DATABASERS.TIPO_OPERACION(TIPO_OPERACION_CODIGO);

ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_MONEDA) REFERENCES DATABASERS.MONEDA(MONEDA_CODIGO);

ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_ESTADO) REFERENCES DATABASERS.ESTADO_ANUNCIO(ESTADO_ANUNCIO_CODIGO);

ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_TIPO_PERIODO) REFERENCES DATABASERS.TIPO_PERIODO(TIPO_PERIODO_CODIGO);

ALTER TABLE DATABASERS.ANUNCIO
ADD FOREIGN KEY (ANUNCIO_AGENTE) REFERENCES DATABASERS.AGENTE(AGENTE_PERSONA);

--FK SUCURSAL
ALTER TABLE DATABASERS.SUCURSAL
ADD FOREIGN KEY (SUCURSAL_BARRIO) REFERENCES DATABASERS.BARRIO(BARRIO_CODIGO);

--FK AGENTE
ALTER TABLE DATABASERS.AGENTE
ADD FOREIGN KEY (AGENTE_SUCURSAL) REFERENCES DATABASERS.SUCURSAL(SUCURSAL_CODIGO);

ALTER TABLE DATABASERS.AGENTE
ADD FOREIGN KEY (AGENTE_PERSONA) REFERENCES DATABASERS.PERSONA(PERSONA_CODIGO);

-- FK PAGO_VENTA
ALTER TABLE DATABASERS.PAGO_VENTA
ADD FOREIGN KEY (PAGO_VENTA_VENTA) REFERENCES DATABASERS.VENTA(VENTA_CODIGO);

ALTER TABLE DATABASERS.PAGO_VENTA
ADD FOREIGN KEY (PAGO_VENTA_MONEDA) REFERENCES DATABASERS.MONEDA(MONEDA_CODIGO);

ALTER TABLE DATABASERS.PAGO_VENTA
ADD FOREIGN KEY (PAGO_VENTA_MEDIO_PAGO) REFERENCES DATABASERS.MEDIO_PAGO(MEDIO_PAGO_CODIGO);

-- FK VENTA
ALTER TABLE DATABASERS.VENTA
ADD FOREIGN KEY (VENTA_ANUNCIO) REFERENCES DATABASERS.ANUNCIO(ANUNCIO_CODIGO);

ALTER TABLE DATABASERS.VENTA --todo: chequear!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ADD FOREIGN KEY (VENTA_COMPRADOR) REFERENCES DATABASERS.COMPRADOR(COMPRADOR_PERSONA);

ALTER TABLE DATABASERS.VENTA
ADD FOREIGN KEY (VENTA_MONEDA) REFERENCES DATABASERS.MONEDA(MONEDA_CODIGO);

-- FK COMPRADOR
ALTER TABLE DATABASERS.COMPRADOR
ADD FOREIGN KEY (COMPRADOR_VENTA) REFERENCES DATABASERS.VENTA(VENTA_CODIGO);

ALTER TABLE DATABASERS.COMPRADOR
ADD FOREIGN KEY (COMPRADOR_PERSONA) REFERENCES DATABASERS.PERSONA(PERSONA_CODIGO);
END
GO

-- 4. MIGRACIÃ“N DE TABLAS

-- PROCEDIMIENTOS

CREATE PROCEDURE MIGRAR_MONEDA
AS
BEGIN
	INSERT INTO DATABASERS.MONEDA
	SELECT DISTINCT ANUNCIO_MONEDA FROM gd_esquema.Maestra WHERE ANUNCIO_MONEDA IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_TIPO_INMUEBLE
AS
BEGIN
	INSERT INTO DATABASERS.TIPO_INMUEBLE
	SELECT DISTINCT INMUEBLE_TIPO_INMUEBLE FROM gd_esquema.Maestra WHERE INMUEBLE_TIPO_INMUEBLE IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_ESTADO_INMUEBLE
AS
BEGIN
	INSERT INTO DATABASERS.ESTADO_INMUEBLE
	SELECT DISTINCT INMUEBLE_ESTADO FROM gd_esquema.Maestra WHERE INMUEBLE_ESTADO IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_CANT_AMBIENTES_INMUEBLE
AS
BEGIN
	INSERT INTO DATABASERS.CANT_AMBIENTES_INMUEBLE
	SELECT DISTINCT INMUEBLE_CANT_AMBIENTES FROM gd_esquema.Maestra WHERE INMUEBLE_CANT_AMBIENTES IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_DISPOSICION_INMUEBLE
AS
BEGIN
	INSERT INTO DATABASERS.DISPOSICION_INMUEBLE
	SELECT DISTINCT INMUEBLE_DISPOSICION FROM gd_esquema.Maestra WHERE INMUEBLE_DISPOSICION IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_ORIENTACION_INMUEBLE
AS
BEGIN
	INSERT INTO DATABASERS.ORIENTACION_INMUEBLE
	SELECT DISTINCT INMUEBLE_ORIENTACION FROM gd_esquema.Maestra WHERE INMUEBLE_ORIENTACION IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_CARACTERISTICA_INMUEBLE
AS
BEGIN
	
	INSERT INTO DATABASERS.CARACTERISTICA_INMUEBLE (CARACTERISTICA_INMUEBLE_DETALLE)
	VALUES('WIFI'),
		('CABLE'),
		('CALEFACCION'),
		('GAS')
END
GO

--BRISA Inmueble: POR SI QUERES CHEQUEAR
CREATE PROCEDURE MIGRAR_INMUEBLE
AS
BEGIN
	SET IDENTITY_INSERT DATABASERS.INSERT ON;
	INSERT INTO DATABASERS.INMUEBLE
	SELECT INMUEBLE_NOMBRE,INMUEBLE_DESCRIPCION,INMUEBLE_DIRECCION,INMUEBLE_SUPERFICIETOTAL,INMUEBLE_ANTIGUEDAD,INMUEBLE_EXPESAS FROM gd_esquema.Maestra WHERE INMUEBLE_CODIGO IS NOT NULL
END
GO

SELECT * FROM DATABASERS.INMUEBLE

INMUEBLE_CODIGO	INMUEBLE_NOMBRE	INMUEBLE_ANTIGUEDAD	INMUEBLE_EXPENSAS	INMUEBLE_CANT_AMBIENTES	INMUEBLE_ORIENTACION	INMUEBLE_DISPOSICION	INMUEBLE_DESCRIPCION	INMUEBLE_SUPERFICIETOTAL	INMUEBLE_TIPO_INMUEBLE	INMUEBLE_BARRIO	INMUEBLE_DIRECCION	INMUEBLE_ESTADO


--PROCEDIMIENTOS DE ANUNCIO

CREATE PROCEDURE MIGRAR_ANUNCIO
AS
BEGIN
	INSERT INTO DATABASERS.ANUNCIO
	SELECT ANUNCIO_FECHA_PUBLICACION,ANUNCIO_PRECIO_PUBLICADO,ANUNCIO_COSTO_ANUNCIO,ANUNCIO_FECHA_FINALIZACION FROM gd_esquema.Maestra WHERE ANUNCIO_CODIGO IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_ESTADO_ANUNCIO
AS
BEGIN
	INSERT INTO DATABASERS.ESTADO_ANUNCIO
	SELECT DISTINCT ANUNCIO_ESTADO FROM gd_esquema.Maestra WHERE ANUNCIO_ESTADO IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_TIPO_OPERACION_ANUNCIO
AS
BEGIN
	INSERT INTO DATABASERS.TIPO_OPERACION
	SELECT DISTINCT ANUNCIO_TIPO_OPERACION FROM gd_esquema.Maestra WHERE ANUNCIO_TIPO_OPERACION IS NOT NULL
END
GO

CREATE PROCEDURE MIGRAR_TIPO_PERIODO_ANUNCIO
AS
BEGIN
	INSERT INTO DATABASERS.TIPO_PERIODO
	SELECT DISTINCT ANUNCIO_TIPO_PERIODO FROM gd_esquema.Maestra WHERE ANUNCIO_TIPO_PERIODO IS NOT NULL
END
GO

--PROCEDIMIENTOS SUCURSAL
CREATE PROCEDURE MIGRAR_SUCURSAL
AS
BEGIN
	INSERT INTO DATABASERS.SUCURSAL
	SELECT SUCURSAL_NOMBRE,SUCURSAL_DIRECCION,SUCURSAL_TELEFONO FROM gd_esquema.Maestra WHERE SUCURSAL_CODIGO IS NOT NULL
END
GO

--PROCEDIMIENTOS ALQUILER 
CREATE PROCEDURE MIGRAR_ALQUILER
AS
BEGIN
	INSERT INTO DATABASERS.ALQUILER
	SELECT ALQUILER_ANUNCIO,ALQUILER_INQUILINO,ALQUILER_ESTADO,ALQUILER_FECHA_INICIO,ALQUILER_FECHA_FIN,ALQUILER_FECHA_INICIO,ALQUILER_CANT_PERIODOS,ALQUILER_DEPOSITO,ALQUILER_COMISION,ALQUILER_GASTOS_AVERIGUA FROM gd_esquema.Maestra where ALQUILER_CODIGO IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_ESTADO_ALQUILER
AS 
BEGIN
	INSERT INTO DATABASERS.ESTADO_ALQUILER
	SELECT ESTADO_ALQUILER_NOMBRE FROM gd_esquema.Maestra WHERE ESTADO_ALQUILER_CODIGO IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_DETALLE
AS 
BEGIN
	INSERT INTO DATABASERS.DETALLE
	SELECT DETALLE_ALQUILER,DETALLE_ALQ_NRO_PERIODO_INI,DETALLE_ALQ_NRO_PERIODO_FIN,DETALLE_ALQ_PRECIO FROM gd_esquema.Maestra WHERE DETALLE_CODIGO IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_PAGO_ALQUILER 
AS
BEGIN
	INSERT INTO DATABASERS.PAGO_ALQUILER
	SELECT PAGO_ALQUILER_MEDIO_PAGO,PAGO_ALQUILER_NRO_PERIODO,PAGO_ALQUILER_FECHA,PAGO_ALQUILER_IMPORTE,PAGO_ALQUILER_FECHA_VENCIMIENTO,PAGO_ALQUILER_DESC,PAGO_ALQUILER_FEC_INI,PAGO_ALQUILER_FEC_FIN FROM gd_esquema.Maestra WHERE PAGO_ALQUILER_CODIGO IS NOT NULL AND PAGO_ALQUILER_ALQUILER IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_BARRIO
AS 
BEGIN
	INSERT INTO DATABASERS.BARRIO
	SELECT BARRIO_DETALLE,BARRIO_LOCALIDAD FROM gd_esquema.Maestra WHERE BARRIO_CODIGO IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_LOCALIDAD
AS 
BEGIN 
	INSERT INTO DATABASERS.LOCALIDAD
	SELECT LOCALIDAD_DETALLE,LOCALIDAD_PROVINCIA FROM gd_esquema.Maestra WHERE LOCALIDAD_CODIGO IS NOT NULL
END 
GO


CREATE PROCEDURE MIGRAR_PROVINCIA
AS 
BEGIN 
	INSERT INTO DATABASERS.PROVINCIA
	SELECT PROVINCIA_DETALLE FROM gd_esquema.Maestra WHERE PROVINCIA_CODIGO IS NOT NULL
END 
GO


--FALTA SUCURSAL PROVINCIA Y LOCALIDAD, SUCURSAL TIENE ES BARRIO



--PROCEDIMIENTOS DE PERSONA (AGENTE, PROPIETARIO, COMPRADOR, INQUILINO)

CREATE PROCEDURE MIGRAR_PERSONA
AS
BEGIN
	INSERT INTO DATABASERS.PERSONA (PERSONA_DNI,PERSONA_NOMBRE,PERSONA_APELLIDO,PERSONA_FECHA_REGISTRO,PERSONA_TELEFONO,PERSONA_MAIL,PERSONA_FECHA_NAC)
	SELECT 
	DISTINCT INQUILINO_DNI,INQUILINO_NOMBRE, 
	INQUILINO_APELLIDO,  INQUILINO_FECHA_REGISTRO,
	INQUILINO_TELEFONO,
	INQUILINO_MAIL, INQUILINO_FECHA_NAC 
	FROM gd_esquema.Maestra m WHERE INQUILINO_DNI IS NOT NULL AND NOT EXISTS (
        SELECT *
        FROM DATABASERS.PERSONA p
        WHERE p.PERSONA_DNI = m.INQUILINO_DNI
    )

	INSERT INTO DATABASERS.PERSONA (PERSONA_DNI,PERSONA_NOMBRE,PERSONA_APELLIDO,PERSONA_FECHA_REGISTRO,PERSONA_TELEFONO,PERSONA_MAIL,PERSONA_FECHA_NAC)
	SELECT 
	DISTINCT COMPRADOR_DNI,COMPRADOR_NOMBRE, 
	COMPRADOR_APELLIDO,  COMPRADOR_FECHA_REGISTRO,
	COMPRADOR_TELEFONO,
	COMPRADOR_MAIL, COMPRADOR_FECHA_NAC 
	FROM gd_esquema.Maestra m WHERE COMPRADOR_DNI IS NOT NULL AND NOT EXISTS (
        SELECT *
        FROM DATABASERS.PERSONA p
        WHERE p.PERSONA_DNI = m.COMPRADOR_DNI
    )

	INSERT INTO DATABASERS.PERSONA (PERSONA_DNI,PERSONA_NOMBRE,PERSONA_APELLIDO,PERSONA_FECHA_REGISTRO,PERSONA_TELEFONO,PERSONA_MAIL,PERSONA_FECHA_NAC)
	SELECT 
	DISTINCT PROPIETARIO_DNI,PROPIETARIO_NOMBRE, 
	PROPIETARIO_APELLIDO,  PROPIETARIO_FECHA_REGISTRO,
	PROPIETARIO_TELEFONO,
	PROPIETARIO_MAIL, PROPIETARIO_FECHA_NAC 
	FROM gd_esquema.Maestra m WHERE PROPIETARIO_DNI IS NOT NULL AND  NOT EXISTS (
        SELECT *
        FROM DATABASERS.PERSONA p
        WHERE p.PERSONA_DNI = m.PROPIETARIO_DNI
    ) 
	
	INSERT INTO DATABASERS.PERSONA (PERSONA_DNI,PERSONA_NOMBRE,PERSONA_APELLIDO,PERSONA_FECHA_REGISTRO,PERSONA_TELEFONO,PERSONA_MAIL,PERSONA_FECHA_NAC)
	SELECT 
	DISTINCT AGENTE_DNI,AGENTE_NOMBRE, 
	AGENTE_APELLIDO,  AGENTE_FECHA_REGISTRO,
	AGENTE_TELEFONO,
	AGENTE_MAIL, AGENTE_FECHA_NAC 
	FROM gd_esquema.Maestra m WHERE AGENTE_DNI IS NOT NULL AND  NOT EXISTS (
        SELECT *
        FROM DATABASERS.PERSONA p
        WHERE p.PERSONA_DNI = m.AGENTE_DNI
    ) 

	
END
GO

CREATE PROCEDURE MIGRAR_VENTA
AS
BEGIN
	SET IDENTITY_INSERT DATABASERS.VENTA ON;
	INSERT INTO DATABASERS.VENTA (VENTA_CODIGO,VENTA_FECHA,VENTA_PRECIO_VENTA,VENTA_COMISION,VENTA_COMPRADOR, VENTA_ANUNCIO)
	SELECT DISTINCT VENTA_CODIGO, VENTA_FECHA, VENTA_PRECIO_VENTA, VENTA_COMISION, 
	PERSONA_CODIGO AS VENTA_COMPRADOR, ANUNCIO_CODIGO AS VENTA_ANUNCIO
	FROM gd_esquema.Maestra 
	JOIN DATABASERS.PERSONA ON PERSONA_DNI = COMPRADOR_DNI
	WHERE VENTA_CODIGO IS NOT NULL
	SET IDENTITY_INSERT DATABASERS.VENTA OFF;
END
GO


EXECUTE ELIMINAR_PROCEDIMIENTOS
EXECUTE ELIMINAR_TABLAS
EXECUTE CREAR_TABLAS
EXECUTE AGREGAR_FK